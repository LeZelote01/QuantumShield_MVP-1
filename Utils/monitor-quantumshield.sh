#!/bin/bash

# Script de surveillance QuantumShield
while true; do
    clear
    echo "üõ°Ô∏è  QUANTUMSHIELD - MONITORING EN TEMPS R√âEL"
    echo "============================================"
    echo "$(date)"
    echo ""
    
    # V√©rification des services
    echo "üìä STATUT DES SERVICES:"
    echo "----------------------"
    
    # MongoDB
    if systemctl is-active --quiet mongod; then
        echo "‚úÖ MongoDB: ACTIF"
    else
        echo "‚ùå MongoDB: INACTIF"
    fi
    
    # Backend
    if pgrep -f "server.py" > /dev/null; then
        echo "‚úÖ Backend: ACTIF (PID: $(pgrep -f server.py))"
        # Test API
        if curl -s http://localhost:8001/api/health > /dev/null; then
            echo "   üåê API: R√âPOND"
        else
            echo "   ‚ùå API: NE R√âPOND PAS"
        fi
    else
        echo "‚ùå Backend: INACTIF"
    fi
    
    # Frontend
    if pgrep -f "react-scripts" > /dev/null; then
        echo "‚úÖ Frontend: ACTIF (PID: $(pgrep -f react-scripts))"
    else
        echo "‚ùå Frontend: INACTIF"
    fi
    
    echo ""
    echo "üíª RESSOURCES SYST√àME:"
    echo "---------------------"
    echo "RAM: $(free -h | awk 'NR==2{printf "%.1fG/%.1fG (%.0f%%)", $3/1024/1024, $2/1024/1024, $3*100/$2}')"
    echo "CPU: $(top -bn1 | grep "Cpu(s)" | awk '{print $2}' | sed 's/%us,//')"
    echo "Disque: $(df -h / | awk 'NR==2 {print $5}')"
    
    echo ""
    echo "üåê PORTS R√âSEAU:"
    echo "---------------"
    sudo netstat -tlnp | grep -E ':3000|:8001|:27017' | while read line; do
        echo "   $line"
    done
    
    echo ""
    echo "Actualisation dans 10 secondes... (Ctrl+C pour arr√™ter)"
    sleep 10
done